"""init db

修订 ID: 2886fb521b64
父修订: ac57f7074e58
创建时间: 2023-10-29 11:35:36.789095

"""
from __future__ import annotations

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

revision: str = "2886fb521b64"
down_revision: str | Sequence[str] | None = "ac57f7074e58"
branch_labels: str | Sequence[str] | None = ("repeat",)
depends_on: str | Sequence[str] | None = None


def upgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "repeat_enabled",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("platform", sa.String(), nullable=False),
        sa.Column("group_id", sa.String(), nullable=False),
        sa.Column("guild_id", sa.String(), nullable=False),
        sa.Column("channel_id", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_repeat_enabled")),
        sa.UniqueConstraint(
            "platform", "group_id", "guild_id", "channel_id", name="unique_enabled"
        ),
        info={"bind_key": "repeat"},
    )
    op.create_table(
        "repeat_record",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("platform", sa.String(), nullable=False),
        sa.Column("group_id", sa.String(), nullable=False),
        sa.Column("guild_id", sa.String(), nullable=False),
        sa.Column("channel_id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("repeat_time", sa.Integer(), nullable=False),
        sa.Column("msg_number", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_repeat_record")),
        sa.UniqueConstraint(
            "date",
            "platform",
            "group_id",
            "guild_id",
            "channel_id",
            "user_id",
            name="unique_record",
        ),
        info={"bind_key": "repeat"},
    )
    # ### end Alembic commands ###


def downgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("repeat_record")
    op.drop_table("repeat_enabled")
    # ### end Alembic commands ###
