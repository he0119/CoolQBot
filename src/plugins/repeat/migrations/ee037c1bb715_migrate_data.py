"""migrate data

修订 ID: ee037c1bb715
父修订: 230c28ca1ecb
创建时间: 2023-10-29 18:43:21.062177

"""
from __future__ import annotations

from collections.abc import Sequence

from alembic import op
from nonebot import logger
from sqlalchemy import Connection
from sqlalchemy.ext.asyncio import AsyncConnection
from sqlalchemy.ext.automap import automap_base
from sqlalchemy.orm import Session

revision: str = "ee037c1bb715"
down_revision: str | Sequence[str] | None = "230c28ca1ecb"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def _migrate_old_data(ds_conn: Connection):
    DsBase = automap_base()
    DsBase.prepare(autoload_with=ds_conn)
    DsMessageRecord = DsBase.classes.repeat_record
    DsEnabled = DsBase.classes.repeat_enabled

    Base = automap_base()
    Base.prepare(autoload_with=op.get_bind())
    MessageRecord = Base.classes.repeat_messagerecord
    Enabled = Base.classes.repeat_enabled

    ds_sessioin = Session(ds_conn)
    session = Session(op.get_bind())

    # 写入数据
    logger.info("repeat: 发现来自 datastore 的数据，正在迁移...")
    for ds_message_record in ds_sessioin.query(DsMessageRecord).all():
        message_record = MessageRecord(
            id=ds_message_record.id,
            date=ds_message_record.date,
            platform=ds_message_record.platform,
            group_id=ds_message_record.group_id,
            guild_id=ds_message_record.guild_id,
            channel_id=ds_message_record.channel_id,
            user_id=ds_message_record.user_id,
            repeat_time=ds_message_record.repeat_time,
            msg_number=ds_message_record.msg_number,
        )
        session.add(message_record)
    for ds_enabled in ds_sessioin.query(DsEnabled).all():
        enabled = Enabled(
            id=ds_enabled.id,
            platform=ds_enabled.platform,
            group_id=ds_enabled.group_id,
            guild_id=ds_enabled.guild_id,
            channel_id=ds_enabled.channel_id,
        )
        session.add(enabled)

    session.commit()
    logger.info("repeat: 迁移完成")


async def data_migrate(conn: AsyncConnection):
    from nonebot_plugin_datastore.db import get_engine

    async with get_engine().connect() as ds_conn:
        await ds_conn.run_sync(_migrate_old_data)


def upgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    op.run_async(data_migrate)
    # ### end Alembic commands ###


def downgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
